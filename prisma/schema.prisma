generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model comment {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  movie_id   String   @db.Uuid
  content    String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  movie      movie    @relation(fields: [movie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model favorite {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  movie_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  movie      movie    @relation(fields: [movie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model movie {
  id                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String     @db.VarChar(255)
  year              Int
  category          String     @db.VarChar(255)
  vod_service       String     @db.VarChar(255)
  cost              Int
  interesting_facts String?    @db.VarChar(255)
  created_at        DateTime   @default(now()) @db.Timestamp(6)
  updated_at        DateTime   @default(now()) @db.Timestamp(6)
  comment           comment[]
  favorite          favorite[]
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  comment      comment[]
  favorite     favorite[]
  organization organization[]
}
